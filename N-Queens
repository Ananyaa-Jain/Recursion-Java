public class nQueens {
    public static void main(String[] args){
        int queens = 4;
//take size of your board as input, here it is 4x4
        int n = 4;
        boolean[][] board = new boolean[n][n];
        queensPlaced(queens, board, 0);
    }
    public static void queensPlaced(int queens, boolean[][] board, int row){
        //base case
        if(queens==0) {
            display(board);
            return;
        }
        for(int col = 0; col<board.length; col++){
            if(isSafe(row, col, board)){
                board[row][col] = true;
                queensPlaced(queens-1, board, row+1);
                //backtrack
                board[row][col] = false;
            }
        }
    }
    public static boolean isSafe(int row, int col, boolean[][] board){
        //in upper direction
        int r = row;
        int c = col;
        while(r>=0){
            if(board[r][c]==true){
                return false;
            }
            r--;
        }
        //in left upper diagonal
        r = row;
        c = col;
        while(r>=0 && c>=0){
            if(board[r][c]==true){
                return false;
            }
            r--;
            c--;
        }
        //in right upper diagonal
        r = row;
        c = col;
        while(r>=0 && c< board.length){
            if(board[r][c]==true){
                return false;
            }
            r--;
            c++;
        }
        return true;
    }
    public static void display(boolean[][] arr){
        int n = arr.length;
        String[][] ans  = new String[n][n];
        for(int i=0; i< arr.length; i++){
            for(int j=0; j< arr.length; j++){
                if(arr[i][j]==true){
                    ans[i][j]= "Q";
                }
                else{
                    ans[i][j]= ".";
                }
                System.out.print(ans[i][j]);
            }
        System.out.println();
        }
        System.out.println("*****************************");
    }
}
